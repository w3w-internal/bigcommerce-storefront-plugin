version: 2.1

parameters:
  dev-s3-bucket:
    type: string
    default: 'cdn.dev.w3w.io'
  prod-s3-bucket:
    type: string
    default: 'cdn.what3words.com'

only-prerelease-tags: &only-prerelease-tags
  filters:
    tags:
      only: /^v([0-9]+)\.([0-9]+)\.([0-9]+)(?:-([0-9A-Za-z-]+(?:\.[0-9]+)*))?(?:\+[0-9]+)?$/

only-stable-tags: &only-stable-tags
  filters:
    tags:
      only: /^v([0-9]+)\.([0-9]+)\.([0-9]+)$/
    branches:
      ignore: /.*/

orbs:
  node: circleci/node@2.1.0
  slack: circleci/slack@3.4.2
  aws-s3: circleci/aws-s3@1.0.15

executors:
  build-executor:
    docker:
      - image: circleci/node:lts
  publish-executor:
    docker:
      - image: amazon/aws-cli:2.0.14

commands:
  setup_environment:
    description: 'Export pipeline number as env var'
    parameters:
      version_path:
        type: string
        default: .
    steps:
      - run:
          name: 'Export pipeline number'
          command: |
            echo "export PIPELINE_NUM=<< pipeline.number >>" >> $BASH_ENV
            echo "export VERSION=$(cat << parameters.version_path >>/package.json | grep '\"version\":' | sed -e 's/  \"version\": \"//' | sed -e 's/\",//')" >> $BASH_ENV
  add_fingerprint:
    parameters:
      fingerprint:
        type: string
    steps:
      - add_ssh_keys:
          fingerprints: << parameters.fingerprint >>

  jobstatus:
    description: 'Send customized status messages to Slack'
    steps:
      - slack/status:
          failure_message: ':red_circle: ${CIRCLE_JOB} job of pipeline ${PIPELINE_NUM} for ${CIRCLE_TAG:-$CIRCLE_BRANCH} by ${CIRCLE_USERNAME} has failed'
          success_message: ':bananadance: ${CIRCLE_JOB} job of pipeline ${PIPELINE_NUM} for ${CIRCLE_TAG:-$CIRCLE_BRANCH} by ${CIRCLE_USERNAME} has passed'

  git_config:
    parameters:
      email:
        type: string
      author:
        type: string
    steps:
      - run:
          name: git configuration
          command: |
            git config --global user.email << parameters.email >>
            git config --global user.name << parameters.author >>
            ssh-keyscan github.com >> ~/.ssh/known_hosts
  git_tag:
    description: 'Tag the project'
    parameters:
      tag:
        type: string
      when:
        type: string
        default: on_success
    steps:
      - run:
          name: Git tag
          command: |
            git tag -f << parameters.tag >>
          when: << parameters.when >>
  git_push_tags:
    description: 'Push tags to remote repository'
    steps:
      - run:
          name: git push tags
          command: git push -f --tags

jobs:
  build-dev:
    executor: build-executor
    environment:
      BASE_URL: https://api.london.dev.w3w.io/v3
      PACKAGE_NAME: what3words-dev
    steps:
      - checkout
      - node/install-packages
      - run: npm run coverage
      - run: npm run build
      - store_artifacts:
          path: coverage
      - persist_to_workspace:
          root: .
          paths:
            - ./build

  build-prod:
    executor: build-executor
    environment:
      PACKAGE_NAME: what3words
    steps:
      - checkout
      - node/install-packages
      - run: npm run coverage
      - run: npm run build
      - store_artifacts:
          path: coverage
      - persist_to_workspace:
          root: .
          paths:
            - ./build

  publish-dev:
    executor: publish-executor
    steps:
      - run:
          name: 'install basic utility tools'
          command: yum install -y tar gzip which git
      - attach_workspace:
          at: /tmp/workspace
      - aws-s3/sync:
          from: /tmp/workspace/build/
          to: 's3://<< pipeline.parameters.dev-s3-bucket >>/bigcommerce-storefront-plugin/'
          arguments: --delete

  publish:
    executor: publish-executor
    steps:
      - run:
          name: 'install basic utility tools'
          command: yum install -y tar gzip which git
      - attach_workspace:
          at: /tmp/workspace
      - aws-s3/sync:
          from: /tmp/workspace/build/
          to: 's3://<< pipeline.parameters.prod-s3-bucket >>/bigcommerce-storefront-plugin/'
          arguments: --delete

workflows:
  version: 2
  build-and-deploy:
    jobs:
      - build-dev:
          context: org-global
      - build-prod:
          <<: *only-stable-tags
          context: org-global
      - publish-dev:
          <<: *only-prerelease-tags
          context:
            - org-global
            - org-w3w-aws-dev
          requires:
            - build-dev
      - publish:
          <<: *only-stable-tags
          context:
            - org-global
            - org-w3w-aws-prod
          requires:
            - build-prod
